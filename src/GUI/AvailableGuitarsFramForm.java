/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import loveguitars.assignemnt.Guitar;



/**
 *
 * @author Tatiana
 */
public class AvailableGuitarsFramForm extends javax.swing.JInternalFrame {


    /**
     * Creates new form AddGuitarFrameForm
     */
    
    
    public AvailableGuitarsFramForm() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui= (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        //define new table
        
   
        sStatusLabel2.setVisible(false);
        sStatusComboBox.setVisible(false);
        Maintenance.setVisible(false);
        returnButton.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        searchButton1 = new javax.swing.JButton();
        sSerialTextField = new javax.swing.JTextField();
        sSerialLabel = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        sStatusComboBox = new javax.swing.JComboBox<>();
        sStatusLabel2 = new javax.swing.JLabel();
        returnButton = new javax.swing.JButton();
        Maintenance = new javax.swing.JButton();

        setBackground(new java.awt.Color(34, 41, 48));
        setForeground(new java.awt.Color(78, 177, 186));

        jPanel1.setBackground(new java.awt.Color(34, 41, 48));
        jPanel1.setPreferredSize(new java.awt.Dimension(666, 646));

        jScrollPane2.setBackground(new java.awt.Color(34, 41, 48));

        displayTable.setBackground(new java.awt.Color(34, 41, 48));
        displayTable.setForeground(new java.awt.Color(233, 233, 233));
        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SerialNumber", "Year of Manufacture", "Type", "Colour", "Length", "Model", "Top Wood", "Rent per day", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        displayTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        displayTable.setFillsViewportHeight(true);
        displayTable.setFocusable(false);
        displayTable.setGridColor(new java.awt.Color(0, 0, 0));
        displayTable.setRowHeight(30);
        displayTable.setRowMargin(2);
        displayTable.setSelectionBackground(new java.awt.Color(78, 177, 186));
        displayTable.setSelectionForeground(new java.awt.Color(233, 233, 233));
        displayTable.setShowVerticalLines(false);
        jScrollPane2.setViewportView(displayTable);
        if (displayTable.getColumnModel().getColumnCount() > 0) {
            displayTable.getColumnModel().getColumn(0).setResizable(false);
            displayTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            displayTable.getColumnModel().getColumn(1).setPreferredWidth(20);
            displayTable.getColumnModel().getColumn(2).setResizable(false);
            displayTable.getColumnModel().getColumn(2).setPreferredWidth(35);
            displayTable.getColumnModel().getColumn(3).setPreferredWidth(20);
            displayTable.getColumnModel().getColumn(4).setPreferredWidth(20);
            displayTable.getColumnModel().getColumn(5).setPreferredWidth(20);
            displayTable.getColumnModel().getColumn(6).setResizable(false);
            displayTable.getColumnModel().getColumn(6).setPreferredWidth(100);
            displayTable.getColumnModel().getColumn(7).setPreferredWidth(20);
            displayTable.getColumnModel().getColumn(8).setResizable(false);
        }

        searchButton.setBackground(new java.awt.Color(78, 177, 186));
        searchButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        searchButton.setText("Display available guiatrs");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchButton1.setBackground(new java.awt.Color(78, 177, 186));
        searchButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        searchButton1.setText("Search");
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });

        sSerialLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sSerialLabel.setForeground(new java.awt.Color(78, 177, 186));
        sSerialLabel.setText("Serial number");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(233, 233, 233));
        jLabel20.setText("Guitar maintenace management");

        sStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "On the shop", "Rented out", "Under maintenance" }));

        sStatusLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sStatusLabel2.setForeground(new java.awt.Color(78, 177, 186));
        sStatusLabel2.setText("Status");

        returnButton.setBackground(new java.awt.Color(78, 177, 186));
        returnButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        Maintenance.setBackground(new java.awt.Color(78, 177, 186));
        Maintenance.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Maintenance.setText("Maintenance");
        Maintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaintenanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sSerialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sStatusLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Maintenance)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sSerialLabel)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sSerialLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sSerialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sStatusLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Maintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
   
        model.setNumRows(0);
        ArrayList<Guitar>guitar=Dashboard.shop.getGuitars();     
        Object [] rowData= new Object[9];
        for (int i=0; i<guitar.size(); i++)
        {//check if guitar has available status
               if(guitar.get(i).getStatus().equals("On the shop"))
                {
            rowData[0]=guitar.get(i).getSerialNumber();
            rowData[1]=guitar.get(i).getYearOfManufacture();
            rowData[2]=guitar.get(i).getType();
            rowData[3]=guitar.get(i).getColour();
            rowData[4]=guitar.get(i).getLenght();
            rowData[5]=guitar.get(i).getModel();
            rowData[6]=guitar.get(i).getTopWood();
            rowData[7]=guitar.get(i).getRentChanrgePerDay();
            rowData[8]=guitar.get(i).getStatus();
            model.addRow(rowData);
                }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        // search guitar
        String ID =sSerialTextField.getText();
        //staf searching guitar from the shop array list
        Guitar guitar=Dashboard.staff.searchGuitar(ID, Dashboard.shop);
        if (guitar==null)
        {
            JOptionPane.showMessageDialog(this, "No guitar found");
        }else
        {
            sStatusLabel2.setVisible(true);
            sStatusComboBox.setVisible(true);
            
            sStatusComboBox.setSelectedItem(guitar.getStatus());
            if (guitar.getStatus().equals("Rented out"))
            {
                Maintenance.setVisible(false);
                returnButton.setVisible(false);
            }else
            {
                Maintenance.setVisible(true);
                returnButton.setVisible(true);
            }
    }//GEN-LAST:event_searchButton1ActionPerformed

    }
    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        // TODO add your handling code here:
            // search guitar
        String ID =sSerialTextField.getText();
        //staf searching guitar from the shop array list
        Guitar guitar=Dashboard.staff.searchGuitar(ID, Dashboard.shop);
        if (guitar==null)
        {
            JOptionPane.showMessageDialog(this, "No guitar found");
        }else
        {
            sStatusLabel2.setVisible(true);
            sStatusComboBox.setVisible(true);
            Maintenance.setVisible(true);
            returnButton.setVisible(true);
           guitar.returned();
           JOptionPane.showMessageDialog(this, "Guitar available now");
           sStatusLabel2.setVisible(false);
            sStatusComboBox.setVisible(false);
            Maintenance.setVisible(false);
            returnButton.setVisible(false);
            sSerialTextField.setText("");
        }

    }//GEN-LAST:event_returnButtonActionPerformed

    private void MaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaintenanceActionPerformed
        // TODO add your handling code here:
        String ID =sSerialTextField.getText();
        //staf searching guitar from the shop array list
        Guitar guitar=Dashboard.staff.searchGuitar(ID, Dashboard.shop);
        if (guitar==null)
        {
            JOptionPane.showMessageDialog(this, "No guitar found");
        }else
        {     
            sStatusLabel2.setVisible(true);
            sStatusComboBox.setVisible(true);
            Maintenance.setVisible(true);
            returnButton.setVisible(true);
            guitar.maintenance();
            JOptionPane.showMessageDialog(this, "Guitar under maintenance");
            sStatusLabel2.setVisible(false);
            sStatusComboBox.setVisible(false);
            Maintenance.setVisible(false);
            returnButton.setVisible(false);
            sSerialTextField.setText("");
        
        }
    }//GEN-LAST:event_MaintenanceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Maintenance;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel sSerialLabel;
    private javax.swing.JTextField sSerialTextField;
    private javax.swing.JComboBox<String> sStatusComboBox;
    private javax.swing.JLabel sStatusLabel2;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton1;
    // End of variables declaration//GEN-END:variables

}
